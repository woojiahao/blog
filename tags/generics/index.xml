<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Generics on jiahao.blog</title><link>/tags/generics/</link><description>Recent content in Generics on jiahao.blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 26 Nov 2018 00:00:00 +0000</lastBuildDate><atom:link href="/tags/generics/index.xml" rel="self" type="application/rss+xml"/><item><title>An investigation into generics in Java</title><link>/post/java-generics/</link><pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate><guid>/post/java-generics/</guid><description>Generics was a feature introduced in Java 5 and it has changed how Java developers write code.
This article will be discussing some of the things I&amp;rsquo;ve picked up as I dug into generics in Java.
Uses of generics Pre-generics era Imagine you wish to create a container to store an object that can be of any type, pre-generics, you would need to do something like:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Container { private Object obj; public Object getObj() { return obj; } public void setObj(Object obj) { this.</description></item></channel></rss>